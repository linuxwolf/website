name: publish
on:
  push:
    branches:
      - main
    paths-ignore:
      - "k8s/**"

env:
  BUILDX_DIR: /tmp/cache/buildx
  DENO_DIR: /tmp/cache/deno

jobs:
  publish-image:
    name: Publish image
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
      pull-requests: write
    steps:
      - name: "Generate access token"
        id: gentoken
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.RELEASE_MANAGER_APP_ID }}
          private-key: ${{ secrets.RELEASE_MANAGER_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ steps.gentoken.outputs.token }}
          fetch-depth: 0
          fetch-tags: false
      - name: Setup Tooling
        run: ./.github/scripts/install-tooling.sh
        env:
          INSTALL_PATH: /usr/local/bin
          GITHUB_TOKEN: ${{ steps.gentoken.outputs.token }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Signin to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Buildx Caching
        uses: actions/cache@v4
        with:
          path: ${{ env.BUILDX_DIR }}
          key: buildx-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}
      - name: Setup Deno Caching
        uses: actions/cache@v4
        with:
          path: ${{ env.DENO_DIR }}
          key: deno-${{ hashFiles('deno.*') }}
          restore-keys: |
            deno
      - name: Build and publish image
        env:
          DENO_DIR: ${{ env.DENO_DIR }}
          DOCKER_CACHE: ${{ env.BUILDX_DIR }}
          DOCKER_REGISTRY: ghcr.io
          IMAGE_TAG: ${{ github.sha }}
        run: |
          task kustomize
      - name: Prepare deployment
        env:
          GITHUB_TOKEN: ${{ steps.gentoken.outputs.token }}
          DENO_DIR: ${{ env.DENO_DIR }}
        run: |
          deno run --allow-all ./.github/scripts/patch-image.ts