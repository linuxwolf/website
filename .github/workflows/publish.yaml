name: publish
env:
  CONTAINER_REGISTRY: ghcr.io
on:
  push:
    branches:
      - main

jobs:
  publish-image:
    name: Publish image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Signin to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Caching
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}
      - name: Build and publish image
        run: |
          task image \
            DOCKER_CACHE=/tmp/.buildx-cache \
            DOCKER_REGISTRY=${{ env.CONTAINER_REGISTRY }} \
            IMAGE_TAG=${{ github.sha }}
  deploy:
    name: Deploy image
    runs-on: ubuntu-latest
    needs: publish-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${SSH_KEY}" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          cat << ---END--- > ~/.ssh/config
          Host *
            User ${SSH_USER}
            IdentityFile ~/.ssh/deploy.key
            StrictHostKeyChecking no
          ---END---
        env:
          SSH_USER: ${{ secrets.DEPLOYMENT_SSH_USERNAME }}
          SSH_KEY: ${{ secrets.DEPLOYMENT_SSH_KEY }}
      - name: Deploy stack
        run: |
          docker context create o-p-n --docker "host=ssh://${{ secrets.DEPLOYMENT_SSH_USERNAME }}@outer-planes.net"
          task deploy.only \
            DOCKER_CONTEXT=o-p-n
            IMAGE_TAG=${{ github.sha }}
            DOCKER_REGISTRY=${{ env.CONTAINER_REGISTRY }}
